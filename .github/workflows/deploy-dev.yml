name: Deploy to Development

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  KUBE_NAMESPACE: mlops-dev

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'
    
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'
    
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG_DEV }}" | base64 -d > kubeconfig
        echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
    
    - name: Create namespace if not exists
      run: |
        kubectl create namespace ${{ env.KUBE_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
    
    - name: Deploy with Helm
      run: |
        helm upgrade --install ml-service-dev ./deploy/helm/ml-service \
          --namespace ${{ env.KUBE_NAMESPACE }} \
          --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
          --set image.tag=${{ github.sha }} \
          --set environment=development \
          --set replicaCount=2 \
          --set ingress.host=ml-service-dev.local \
          --set resources.requests.cpu=100m \
          --set resources.requests.memory=256Mi \
          --set resources.limits.cpu=500m \
          --set resources.limits.memory=1Gi \
          --wait --timeout=10m
    
    - name: Wait for deployment
      run: |
        kubectl rollout status deployment/ml-service-dev -n ${{ env.KUBE_NAMESPACE }} --timeout=600s
    
    - name: Run smoke tests
      run: |
        # Get service URL
        INGRESS_IP=$(kubectl get ingress ml-service-dev -n ${{ env.KUBE_NAMESPACE }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        if [ -z "$INGRESS_IP" ]; then
          # Fallback to port-forward for testing
          kubectl port-forward svc/ml-service-dev 8080:80 -n ${{ env.KUBE_NAMESPACE }} &
          sleep 5
          SERVICE_URL="http://localhost:8080"
        else
          SERVICE_URL="http://$INGRESS_IP"
        fi
        
        echo "Testing service at: $SERVICE_URL"
        
        # Health check
        curl -f $SERVICE_URL/healthz
        
        # Prediction test
        response=$(curl -s -X POST "$SERVICE_URL/predict" \
          -H "Content-Type: application/json" \
          -d '{"text": "This deployment test is working great!"}')
        
        echo "Prediction response: $response"
        
        # Verify response structure
        echo "$response" | jq -e '.prediction and .latency_ms and .model_version'
    
    - name: Update deployment status
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const status = '${{ job.status }}' === 'success' ? 'success' : 'failure';
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: status,
            target_url: 'https://ml-service-dev.local',
            description: `Development deployment ${status}`,
            context: 'deployment/dev'
          });