version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: mlops-postgres
    environment:
      POSTGRES_DB: mlops_db
      POSTGRES_USER: mlops_user
      POSTGRES_PASSWORD: mlops_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mlops_user -d mlops_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MLflow Tracking Server
  mlflow:
    image: python:3.9-slim
    container_name: mlops-mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://mlops_user:mlops_pass@postgres:5432/mlops_db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlflow/artifacts
    volumes:
      - mlflow_artifacts:/mlflow/artifacts
    command: >
      bash -c "
        pip install mlflow psycopg2-binary &&
        mlflow server 
          --backend-store-uri postgresql://mlops_user:mlops_pass@postgres:5432/mlops_db
          --default-artifact-root /mlflow/artifacts
          --host 0.0.0.0
          --port 5000
      "
    depends_on:
      postgres:
        condition: service_healthy

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: mlops-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # ML Service API
  ml-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: mlops-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://mlops_user:mlops_pass@postgres:5432/mlops_db
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - REDIS_URL=redis://redis:6379
      - MODEL_TYPE=distilbert
      - MODEL_VERSION=latest
      - LOG_LEVEL=INFO
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    depends_on:
      - postgres
      - mlflow
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: mlops-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/monitoring/prometheus/prometheus-local.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'

  # Grafana
  grafana:
    image: grafana/grafana:10.0.0
    container_name: mlops-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deploy/monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

volumes:
  postgres_data:
  mlflow_artifacts:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: mlops-network