apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ml-service-ingress
  namespace: mlops-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    # Blue/Green Traffic Splitting (90/10)
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "10"  # 10% to green
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # Request/Response size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "1m"
    # Load balancing
    nginx.ingress.kubernetes.io/upstream-hash-by: "$request_uri"
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Content-Type-Options nosniff;
      add_header X-Frame-Options DENY;
      add_header X-XSS-Protection "1; mode=block";
spec:
  rules:
  - host: ml-service.local  # Change to your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ml-service-blue
            port:
              number: 8000
---
# Canary Ingress for Green Deployment
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ml-service-canary
  namespace: mlops-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "10"
spec:
  rules:
  - host: ml-service.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ml-service-green
            port:
              number: 8000